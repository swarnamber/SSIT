<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[beforeSuit1 ... ]]>
    </line>
    <line>
      <![CDATA[beforeTest ... ]]>
    </line>
    <line>
      <![CDATA[beforeClass ... ]]>
    </line>
    <line>
      <![CDATA[BeforeMethod ... ]]>
    </line>
    <line>
      <![CDATA[Test1 ... ]]>
    </line>
    <line>
      <![CDATA[AfterMethod ... ]]>
    </line>
    <line>
      <![CDATA[BeforeMethod ... ]]>
    </line>
    <line>
      <![CDATA[Test2 ... ]]>
    </line>
    <line>
      <![CDATA[AfterMethod ... ]]>
    </line>
    <line>
      <![CDATA[afterClass ... ]]>
    </line>
    <line>
      <![CDATA[afterTest ... ]]>
    </line>
    <line>
      <![CDATA[afterSuite ... ]]>
    </line>
  </reporter-output>
  <suite started-at="2022-01-19T21:02:17 IST" name="Suite" finished-at="2022-01-19T21:02:41 IST" duration-ms="24181">
    <groups>
    </groups>
    <test started-at="2022-01-19T21:02:17 IST" name="Test1" finished-at="2022-01-19T21:02:41 IST" duration-ms="24181">
      <class name="application.test.DemoTestNg">
        <test-method is-config="true" signature="beforeSuit1()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="beforeSuit1" finished-at="2022-01-19T21:02:17 IST" duration-ms="9" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[beforeSuit1 ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeSuit1 -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="beforeTest" finished-at="2022-01-19T21:02:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[beforeTest ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="beforeClass" finished-at="2022-01-19T21:02:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[beforeClass ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="beforeMethod" finished-at="2022-01-19T21:02:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[BeforeMethod ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="test1" finished-at="2022-01-19T21:02:17 IST" duration-ms="5" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test1 ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="afterMethod" finished-at="2022-01-19T21:02:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[AfterMethod ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="beforeMethod" finished-at="2022-01-19T21:02:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[BeforeMethod ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="test2" finished-at="2022-01-19T21:02:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Test2 ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="afterMethod" finished-at="2022-01-19T21:02:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[AfterMethod ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:17 IST" name="afterClass" finished-at="2022-01-19T21:02:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[afterClass ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:41 IST" name="afterTest" finished-at="2022-01-19T21:02:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[afterTest ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:application.test.DemoTestNg@51dcb805]" started-at="2022-01-19T21:02:41 IST" name="afterSuite" finished-at="2022-01-19T21:02:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[afterSuite ... ]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- application.test.DemoTestNg -->
      <class name="testng.NewTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.NewTest@27ff5d15]" started-at="2022-01-19T21:02:17 IST" name="beforeMethod" finished-at="2022-01-19T21:02:29 IST" duration-ms="11631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="enterUrl()[pri:0, instance:testng.NewTest@27ff5d15]" started-at="2022-01-19T21:02:29 IST" name="enterUrl" finished-at="2022-01-19T21:02:41 IST" duration-ms="12307" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [xx] but found [Google]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [xx] but found [Google]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testng.NewTest.enterUrl(NewTest.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterUrl -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.NewTest@27ff5d15]" started-at="2022-01-19T21:02:41 IST" name="afterMethod" finished-at="2022-01-19T21:02:41 IST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testng.NewTest -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
